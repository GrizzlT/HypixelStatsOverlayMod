
// For those who want the bleeding edge
buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2"
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version = "2.0.3"
group= "com.github.grizzlt.hypixelstatsoverlay" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "HypixelStatsOverlayMod"

sourceCompatibility = targetCompatibility = 1.8

// Use UTF-8 for encoding
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile('org.spongepowered:mixin:0.6.4-SNAPSHOT') {
        exclude module: 'launchwrapper'
    }

    compile 'com.github.GrizzlT:ServerBasedClientModLibrary:1.8.9-SNAPSHOT'
    provided 'com.github.GrizzlT:HypixelPublicAPIMod:v2.1.0-library'

    provided 'org.jetbrains:annotations:21.0.1'
}

mixin {
    add sourceSets.main, 'hypixelstatsoverlay.mixins.refmap.json'
}

shadowJar {
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.github.GrizzlT:ServerBasedClientModLibrary'))
        exclude(dependency('com.github.grizzlt.hypixel-public-api:hypixel-public-api-modapi'))
        exclude(dependency('org.jetbrains:annotations'))
    }

    classifier = 'mixin-shadow'
}

build.dependsOn(shadowJar)

//noinspection GroovyMissingReturnStatement
reobf {
    shadowJar {
        extraLines "PK: reactor com/github/grizzlt/hypixelpublicapi/shadowedLibs/reactor"
        extraLines "PK: net/hypixel/api com/github/grizzlt/hypixelpublicapi/shadowedLibs/net/hypixel/api"
        extraLines "PK: org/reactivestreams com/github/grizzlt/hypixelpublicapi/shadowedLibs/org/reactivestreams"
        extraLines "PK: io/netty/channel io/netty/channel"

        extraLines "PK: com/github/grizzlt/serverbasedmodlibrary com/github/grizzlt/hypixelstatsoverlay/shadowedLibs/com/github/grizzlt/serverbasedmodlibrary"
    }
}

shadowJar {
    manifest.attributes(
            'MixinConfigs': 'hypixelstatsoverlay.mixins.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'TweakOrder': 0,

            "ForceLoadAsMod": "true",
            'FMLCorePluginContainsFMLMod': 'true',
            'FMLCorePlugin': 'com.github.grizzlt.hypixelstatsoverlay.coremod.MixinLoader'
    )
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


